"app.title" = "Elementary Arithmetic Practice";
"difficulty.level1" = "Level 1 (Addition & Subtraction 1-10)";
"difficulty.level2" = "Level 2 (Addition & Subtraction 1-20)";
"difficulty.level3" = "Level 3 (Addition & Subtraction 1-50)";
"difficulty.level4" = "Level 4 (Multiplication & Division 1-10)";
"difficulty.level5" = "Level 5 (Multiplication & Division 1-20)";
"difficulty.level6" = "Level 6 (Mixed Operations 1-100)";
"difficulty.level" = "Difficulty Level";
"button.start" = "Start Game";
"button.start_new" = "Start New Game";
"settings.time" = "Time Setting";
"settings.language" = "Language Setting";
"game.score" = "Score";
"game.time" = "Time Remaining";
"game.progress" = "Question %@ of %@";
"game.submit" = "Submit";
"game.correct" = "Correct! +5 points";
"game.wrong" = "Wrong Answer";
"game.correct_answer" = "The correct answer is %@";
"result.final_score" = "Final Score";
"result.correct_count" = "%@ correct out of %@";
"result.time_used" = "Time Used";
"result.excellent" = "Excellent ‚≠ê‚≠ê‚≠ê";
"result.good" = "Good ‚≠ê‚≠ê";
"result.pass" = "Pass ‚≠ê";
"result.needimprove" = "Need Practice üí™";
"button.restart" = "Restart";
"button.home" = "Home";
"button.exit" = "Exit";
"button.finish" = "Finish";
"alert.exit_title" = "Confirm Exit";
"alert.exit_message" = "Are you sure you want to exit? Your progress will not be saved.";
"alert.exit_confirm" = "Exit";
"alert.cancel" = "Cancel";
"button.next_question" = "Next Question";
"settings.minutes" = "Minutes";

/* Wrong Questions Collection */
"button.wrong_questions" = "Wrong Questions Collection";
"wrong_questions.title" = "Wrong Questions Collection";
"wrong_questions.filter_by_level" = "Filter by Level";
"wrong_questions.all_levels" = "All Levels";
"wrong_questions.empty" = "No wrong questions yet. Keep practicing!";
"wrong_questions.answer" = "Answer: %@";
"wrong_questions.level" = "Level: %@";
"wrong_questions.stats" = "Attempted %@ times, Wrong %@ times";
"wrong_questions.delete_all" = "Delete All";
"wrong_questions.delete_mastered" = "Delete Mastered";
"alert.delete_all_title" = "Delete All Wrong Questions";
"alert.delete_all_message" = "Are you sure you want to delete all wrong questions? This action cannot be undone.";
"alert.delete_mastered_title" = "Delete Mastered Questions";
"alert.delete_mastered_message" = "Are you sure you want to delete questions you've mastered? This action cannot be undone.";
"alert.delete_confirm" = "Delete";

/* Game Progress */
"game.saved_game" = "Saved Game";
"game.saved_at" = "Saved at: %@";
"game.save_success" = "Game progress saved successfully";
"game.save_error" = "Failed to save game progress";

/* Game Pause */
"game.paused" = "Game Paused";
"game.resume" = "Resume";
"button.pause" = "Pause";
"button.save" = "Save Progress";
"alert.pause_title" = "Pause Game";
"alert.pause_message" = "Pausing will deduct 5 points from your score. You can only pause once per game.";
"alert.pause_confirm" = "Pause";

/* Solution Analysis */
"button.show_solution" = "Show Solution";
"button.hide_solution" = "Hide Solution";
"solution.title" = "Solution Strategy";
"solution.content" = "Solution Content";
"solution.breaking_ten" = "Break Apart Ten";
"solution.borrowing_ten" = "Regrouping Method";
"solution.making_ten" = "Make Ten Strategy";
"solution.leveling_ten" = "Compensation Method";
"solution.multiplication_table" = "Multiplication Table Method";
"solution.decomposition_multiplication" = "Decomposition Multiplication";
"solution.division_verification" = "Division Verification";
"solution.grouping_division" = "Grouping Division";
"solution.standard" = "Standard Algorithm";
"solution.not_applicable" = "The %@ strategy is not applicable to this problem";

/* Solution Steps Templates */
"solution.breaking_ten.steps" = "Break Apart Ten Strategy:\nSolve: %d - %d = ?\n\nStep 1: Break apart %d into 10 + %d\nStep 2: First subtract from 10: 10 - %d = %d\nStep 3: Add the remaining part: %d + %d = %d\n\nAnswer: %d - %d = %d";

"solution.borrowing_ten.steps" = "Regrouping Method:\nSolve: %d - %d = ?\n\nStep 1: Break down %d into %d + %d\nStep 2: Since %d < %d, we need to regroup by borrowing from the tens place\nStep 3: Calculate: %d - %d = %d\nStep 4: Add back: %d + %d = %d\n\nAnswer: %d - %d = %d";

"solution.making_ten.steps" = "Make Ten Strategy:\nSolve: %d + %d = ?\n\nStep 1: Look at the larger number %d. To make 10, we need %d more\nStep 2: Break apart the smaller number %d into %d + %d\nStep 3: Add to make ten: %d + %d = 10\nStep 4: Add the remaining: 10 + %d = %d\n\nAnswer: %d + %d = %d";

"solution.leveling_ten.steps" = "Compensation Method:\nSolve: %d - %d = ?\n\nStep 1: Break apart %d into %d + %d\nStep 2: Subtract to get ten: %d - %d = 10\nStep 3: Subtract the remainder: 10 - %d = %d\n\nAnswer: %d - %d = %d";

"solution.standard.addition" = "Standard Addition:\nSolve: %d + %d = %d\n\nUsing the standard algorithm:\nAdd %d + %d = %d";

"solution.standard.subtraction" = "Standard Subtraction:\nSolve: %d - %d = %d\n\nUsing the standard algorithm:\nSubtract %d - %d = %d";

"solution.standard.multiplication" = "Standard Multiplication:\nSolve: %d √ó %d = %d\n\nUsing the standard algorithm:\nMultiply %d √ó %d = %d";

"solution.standard.division" = "Standard Division:\nSolve: %d √∑ %d = %d\n\nUsing the standard algorithm:\nDivide %d √∑ %d = %d";

"solution.standard.three_numbers" = "Multi-Step Calculation:\nSolve: %d %@ %d %@ %d = ?\n\nStep 1: First calculate %d %@ %d = %d\nStep 2: Then calculate %d %@ %d = %d\n\nFinal Answer: %d %@ %d %@ %d = %d";
"solution.standard.three_numbers_op2_first" = "Multi-Step Calculation (Order of Operations):\nSolve: %1$d %2$@ %3$d %4$@ %5$d = ?\n\nStep 1 (higher precedence): %6$d %7$@ %8$d = %9$d\nStep 2: %10$d %11$@ %12$d = %13$d\n\nFinal Answer: %14$d %15$@ %16$d %17$@ %18$d = %19$d";

"solution.three_numbers_level2" = "Level 2 Multi-Step Problem:\nSolve: %d %@ %d %@ %d = ?\n\nFirst Step Explanation:\n%@\n\nSecond Step Explanation:\n%@\n\nFinal Answer: %d %@ %d %@ %d = %d";

"solution.multiplication_table.steps" = "Multiplication Table Method:\nSolve: %d √ó %d = %d\n\nUsing multiplication table: %d times %d equals %d";

"solution.decomposition_multiplication.steps" = "Decomposition Multiplication:\nSolve: %d √ó %d = %d\n\nStep 1: Break apart %d into %d + %d\nStep 2: Calculate %d √ó %d = %d\nStep 3: Calculate %d √ó %d = %d\nStep 4: Add the results: %d + %d = %d\n\nAnswer: %d √ó %d = %d";

"solution.division_verification.steps" = "Division Verification:\nSolve: %d √∑ %d = %d\n\nThink: What times %d equals %d?\nVerification: %d √ó %d = %d\nSince %d = %d, therefore %d √∑ %d = %d";

"solution.grouping_division.steps" = "Grouping Division:\nSolve: %d √∑ %d = %d\n\nDivide %d items into %d equal groups\nEach group has %d √ó %d = %d items\nTherefore: %d √∑ %d = %d";

/* Multiplication Table */
"button.multiplication_table" = "9√ó9 Multiplication Table";
"multiplication_table.title" = "Multiplication Table";
"multiplication_table.instructions" = "This is the complete 9√ó9 multiplication table, containing all multiplication operations from 1 to 9. Different colors represent different difficulty levels.";
"multiplication_table.formula" = "%@ √ó %@ = %@";
"button.back" = "Back";

/* Other Options */
"button.other_options" = "Other Options";
"other_options.title" = "Other Options";
"other_options.back" = "Back to Main";

/* Question Reading */
"question.read_aloud" = "What is %@?";

/* About Me */
"button.about_me" = "About Me";
"about.page_title" = "About Me";
"about.title" = "About the Developer";
"about.content" = "This is an elementary arithmetic practice app designed to help children improve their math skills through interactive exercises. The app provides various difficulty levels and tracks progress to make learning fun and engaging.";
"about.github_link" = "Visit GitHub Repository";

/* System Information */
"system.info.title" = "System Information";
"system.info.device_name" = "Device Name";
"system.info.cpu_info" = "CPU Information";
"system.info.cpu_usage" = "CPU Usage";
"system.info.memory_usage" = "Memory Usage";
"system.info.memory_used" = "Used";
"system.info.memory_total" = "Total";
"system.info.memory_available" = "Available";
"system.info.disk_usage" = "Disk Usage";
"system.info.disk_used" = "Used";
"system.info.disk_total" = "Total";
"system.info.disk_available" = "Available";
"system.info.system_version" = "System Version";
"system.info.current_time" = "Current Time";

/* Formula Guide */
"button.formula_guide" = "Elementary Math Formulas";
"formula_guide_title" = "Essential Formulas for Elementary School Mathematics";
"formula_guide_desc" = "A comprehensive quick-reference guide of mathematical formulas for elementary school students, organized by topic for easy memorization and lookup. Simple examples are provided in parentheses for better understanding.";

/* Geometry Formulas */
"geometry_formulas_title" = "Geometric Formulas";
"plane_figures_title" = "Plane Figures";
"solid_figures_title" = "Solid Figures";

/* Geometric Shapes */
"rectangle" = "Rectangle";
"square" = "Square";
"triangle" = "Triangle";
"parallelogram" = "Parallelogram";
"trapezoid" = "Trapezoid";
"circle" = "Circle";
"cuboid" = "Cuboid";
"cube" = "Cube";
"cylinder" = "Cylinder";
"cone" = "Cone";

/* Formula Types */
"perimeter_formula" = "Perimeter";
"area_formula" = "Area";
"volume_formula" = "Volume";
"volume_formula_alt" = "Volume Formula (Alternative)";
"diameter_formula" = "Diameter";
"radius_formula" = "Radius";
"circumference_formula" = "Circumference";
"lateral_surface_area" = "Lateral Surface Area";
"surface_area" = "Surface Area";
"interior_angles_sum" = "Interior Angles Sum";
"base_area" = "Base Area";
"height" = "Height";

/* Unit Conversions */
"unit_conversions_title" = "Unit Conversions";
"length_units" = "Length Units";
"area_units" = "Area Units";
"volume_units" = "Volume Units";
"mass_units" = "Mass Units";
"time_units" = "Time Units";

/* Units */
"kilometer" = "Kilometer";
"meter" = "Meter";
"decimeter" = "Decimeter";
"centimeter" = "Centimeter";
"millimeter" = "Millimeter";
"square_meter" = "Square Meter";
"square_decimeter" = "Square Decimeter";
"square_centimeter" = "Square Centimeter";
"square_millimeter" = "Square Millimeter";
"hectare" = "Hectare";
"cubic_meter" = "Cubic Meter";
"cubic_decimeter" = "Cubic Decimeter";
"cubic_centimeter" = "Cubic Centimeter";
"liter" = "Liter";
"milliliter" = "Milliliter";
"ton" = "Ton";
"kilogram" = "Kilogram";
"gram" = "Gram";
"year" = "Year";
"month" = "Month";
"day" = "Day";
"hour" = "Hour";
"minute" = "Minute";
"second" = "Second";

/* Quantity Relations */
"quantity_relations_title" = "Quantity Relationship Formulas";
"basic_relations" = "Basic Relations";
"arithmetic_operations" = "Arithmetic Operations";

/* Basic Relations Terms */
"unit_number" = "Unit Number";
"units" = "Units";
"total" = "Total";
"speed" = "Speed";
"time" = "Time";
"distance" = "Distance";
"unit_price" = "Unit Price";
"quantity" = "Quantity";
"total_price" = "Total Price";
"work_efficiency" = "Work Efficiency";
"work_time" = "Work Time";
"work_total" = "Work Total";

/* Arithmetic Operations Terms */
"addend" = "Addend";
"sum" = "Sum";
"minuend" = "Minuend";
"subtrahend" = "Subtrahend";
"difference" = "Difference";
"factor" = "Factor";
"product" = "Product";
"dividend" = "Dividend";
"divisor" = "Divisor";
"quotient" = "Quotient";

/* Arithmetic Laws */
"arithmetic_laws_title" = "Arithmetic Laws";
"operation_laws" = "Operation Laws";
"fraction_operations" = "Fraction Operations";

/* Operation Laws */
"commutative_law_addition" = "Commutative Law of Addition";
"associative_law_addition" = "Associative Law of Addition";
"commutative_law_multiplication" = "Commutative Law of Multiplication";
"associative_law_multiplication" = "Associative Law of Multiplication";
"distributive_law" = "Distributive Law";

/* Fraction Operations */
"fraction_addition_same_denominator" = "Same denominator fractions: Add/subtract numerators, keep denominator";
"fraction_addition_different_denominator" = "Different denominator fractions: Find common denominator first";
"fraction_multiplication" = "Fraction multiplication: Multiply numerators and denominators";
"fraction_division" = "Fraction division: Multiply by the reciprocal";

/* Special Problems */
"special_problems_title" = "Special Problem Types";
"sum_difference_problem" = "Sum and Difference Problems";
"sum_multiple_problem" = "Sum and Multiple Problems";
"plant_tree_problem" = "Tree Planting Problems";
"meeting_problem" = "Meeting Problems";
"chase_problem" = "Chase Problems";
"profit_problem" = "Profit Problems";

/* Problem Solving Terms */
"large_number_formula" = "Larger Number";
"small_number_formula" = "Smaller Number";
"small_number" = "Smaller Number";
"multiple" = "Multiple";
"trees" = "Number of Trees";
"segments" = "Number of Segments";
"both_ends_plant" = "Plant at Both Ends";
"one_end_plant" = "Plant at One End";
"no_end_plant" = "No Plants at Ends";
"meeting_distance" = "Meeting Distance";
"speed_sum" = "Sum of Speeds";
"meeting_time" = "Meeting Time";
"chase_distance" = "Chase Distance";
"speed_difference" = "Speed Difference";
"chase_time" = "Chase Time";
"profit" = "Profit";
"selling_price" = "Selling Price";
"cost" = "Cost";
"profit_rate" = "Profit Rate";
"back" = "Back";
